{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { Controller } from \"stimulus\";\nimport axios from \"axios\";\nimport { axiosPostable } from \"../lib/utils\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_Controller) {\n  _inherits(_default, _Controller);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.axios = axiosPostable(axios);\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      // We'll handle saving ourselves. Disable normal form operation\n      this.element.querySelector('.modal-card-body > form').addEventListener('submit', function (event) {\n        event.preventDefault();\n      });\n    }\n  }, {\n    key: \"save\",\n    value: function () {\n      var _save = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var form, data, savePath, httpMethod, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                form = this.element.querySelector('.modal-card-body > form');\n                data = new FormData(form);\n                savePath = this.data.get('path');\n                httpMethod = this.data.get('http-method');\n                _context.prev = 4;\n                response = null;\n\n                if (!(httpMethod == 'post')) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.next = 9;\n                return this.axios.post(savePath, data);\n\n              case 9:\n                response = _context.sent;\n                _context.next = 16;\n                break;\n\n              case 12:\n                if (!(httpMethod == 'put')) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.next = 15;\n                return this.axios.put(savePath, data);\n\n              case 15:\n                response = _context.sent;\n\n              case 16:\n                this.closeModal();\n                _context.next = 23;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t0 = _context[\"catch\"](4);\n                alert(\"I'm sorry, I ran into trouble communicating with the server. Please copy your content to another text editor to preserve your work if this problem persists.\");\n                console.log(_context.t0);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 19]]);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.closeModal();\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.element.remove();\n    }\n  }, {\n    key: \"showAdditionalFields\",\n    value: function showAdditionalFields() {\n      this.additionalFieldsTarget.classList.remove('is-hidden');\n    }\n  }]);\n\n  return _default;\n}(Controller);\n\n_default.targets = [\"additionalFields\"];\nexport { _default as default };","map":{"version":3,"sources":["/home/jared/apps/yarii-editor/app/javascript/controllers/editor_modal_controller.js"],"names":["Controller","axios","axiosPostable","element","querySelector","addEventListener","event","preventDefault","form","data","FormData","savePath","get","httpMethod","response","post","put","closeModal","alert","console","log","remove","additionalFieldsTarget","classList","targets"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,UAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,cAA9B;;;;;;;;;;;;;;;iCAKe;AACX,WAAKD,KAAL,GAAaC,aAAa,CAACD,KAAD,CAA1B;AACD;;;8BAES;AACR;AACA,WAAKE,OAAL,CAAaC,aAAb,CAA2B,yBAA3B,EAAsDC,gBAAtD,CAAuE,QAAvE,EAAiF,UAAAC,KAAK,EAAI;AACxFA,QAAAA,KAAK,CAACC,cAAN;AACD,OAFD;AAGD;;;;;;;;;;;;AAEOC,gBAAAA,I,GAAO,KAAKL,OAAL,CAAaC,aAAb,CAA2B,yBAA3B,C;AACPK,gBAAAA,I,GAAO,IAAIC,QAAJ,CAAaF,IAAb,C;AAEPG,gBAAAA,Q,GAAW,KAAKF,IAAL,CAAUG,GAAV,CAAc,MAAd,C;AACXC,gBAAAA,U,GAAa,KAAKJ,IAAL,CAAUG,GAAV,CAAc,aAAd,C;;AAGbE,gBAAAA,Q,GAAW,I;;sBACXD,UAAU,IAAI,M;;;;;;uBACC,KAAKZ,KAAL,CAAWc,IAAX,CAAgBJ,QAAhB,EAA0BF,IAA1B,C;;;AAAjBK,gBAAAA,Q;;;;;sBACSD,UAAU,IAAI,K;;;;;;uBACN,KAAKZ,KAAL,CAAWe,GAAX,CAAeL,QAAf,EAAyBF,IAAzB,C;;;AAAjBK,gBAAAA,Q;;;AAEF,qBAAKG,UAAL;;;;;;;AAEAC,gBAAAA,KAAK,CAAC,8JAAD,CAAL;AACAC,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;;;;6BAIK;AACP,WAAKH,UAAL;AACD;;;iCAEY;AACX,WAAKd,OAAL,CAAakB,MAAb;AACD;;;2CAEsB;AACrB,WAAKC,sBAAL,CAA4BC,SAA5B,CAAsCF,MAAtC,CAA6C,WAA7C;AACD;;;;EA5C0BrB,U;;SACpBwB,O,GAAU,CAAE,kBAAF,C","sourcesContent":["import { Controller } from \"stimulus\"\nimport axios from \"axios\"\nimport { axiosPostable } from \"../lib/utils\"\n\nexport default class extends Controller {\n  static targets = [ \"additionalFields\" ]\n  \n  initialize() {\n    this.axios = axiosPostable(axios)\n  }\n\n  connect() {\n    // We'll handle saving ourselves. Disable normal form operation\n    this.element.querySelector('.modal-card-body > form').addEventListener('submit', event => {\n      event.preventDefault()\n    })\n  }\n  async save() {\n    const form = this.element.querySelector('.modal-card-body > form');\n    const data = new FormData(form);\n\n    const savePath = this.data.get('path')\n    const httpMethod = this.data.get('http-method')\n\n    try {\n      let response = null\n      if (httpMethod == 'post') {\n        response = await this.axios.post(savePath, data)\n      } else if (httpMethod == 'put') {\n        response = await this.axios.put(savePath, data)\n      }\n      this.closeModal()\n    } catch (error) {\n      alert(\"I'm sorry, I ran into trouble communicating with the server. Please copy your content to another text editor to preserve your work if this problem persists.\")\n      console.log(error)\n    }\n  }\n\n  cancel() {\n    this.closeModal()\n  }\n\n  closeModal() {\n    this.element.remove()\n  }\n  \n  showAdditionalFields() {\n    this.additionalFieldsTarget.classList.remove('is-hidden')\n  }\n}\n"]},"metadata":{},"sourceType":"module"}